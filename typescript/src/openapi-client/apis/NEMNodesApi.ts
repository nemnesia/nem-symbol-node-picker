/* tslint:disable */
/* eslint-disable */
/**
 * NodeWatch API Documentation
 * API providing information about the NEM and Symbol blockchain networks,  including node and network statistics and time-series.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { HeightInfo, Node, TimeSeriesNodesCountInner } from '../models/index';
import { HeightInfoFromJSON, NodeFromJSON, TimeSeriesNodesCountInnerFromJSON } from '../models/index';
import * as runtime from '../runtime';

/**
 *
 */
export class NEMNodesApi extends runtime.BaseAPI {
  /**
   * Returns information about the NEM blockchain\'s heights.
   */
  async getNemHeightRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<HeightInfo>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    let urlPath = `/api/nem/height`;

    const response = await this.request(
      {
        path: urlPath,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => HeightInfoFromJSON(jsonValue));
  }

  /**
   * Returns information about the NEM blockchain\'s heights.
   */
  async getNemHeight(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HeightInfo> {
    const response = await this.getNemHeightRaw(initOverrides);
    return await response.value();
  }

  /**
   * Returns the list of known NEM nodes.
   */
  async getNemNodesRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<Array<Node>>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    let urlPath = `/api/nem/nodes`;

    const response = await this.request(
      {
        path: urlPath,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(NodeFromJSON));
  }

  /**
   * Returns the list of known NEM nodes.
   */
  async getNemNodes(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Node>> {
    const response = await this.getNemNodesRaw(initOverrides);
    return await response.value();
  }

  /**
   * Returns NEM node count time series.
   */
  async getNemNodesCountRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<Array<TimeSeriesNodesCountInner>>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    let urlPath = `/api/nem/nodes/count`;

    const response = await this.request(
      {
        path: urlPath,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TimeSeriesNodesCountInnerFromJSON));
  }

  /**
   * Returns NEM node count time series.
   */
  async getNemNodesCount(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<Array<TimeSeriesNodesCountInner>> {
    const response = await this.getNemNodesCountRaw(initOverrides);
    return await response.value();
  }
}
